module Fonte
  module Parsers
    grammar SteamID
      include Number

      rule steam_id
          steam_id_pending
        / steam_id_bot
        / steam_id_invalid
        / universe:steam_universe ":" id_part:steam_id_part ":" account_number:steam_account_number {
          def value
            text_value
          end
        }
      end

      rule steam_id_pending
        "STEAM_ID_PENDING" {
          def value
            nil
          end
        }
      end

      rule steam_id_bot
        "Bot" {
          def value
            nil
          end
        }
      end

      rule steam_id_invalid
        "UNKNOWN" {
          def value
            nil
          end
        }
      end

      rule steam_universe
        "STEAM_" universe:[0-9] {
          def value
            case universe.text_value.to_i
              when 0
                "Unspecified"
              when 1
                "Public"
              when 2
                "Beta"
              when 3
                "Internal"
              when 4
                "Dev"
              when 5
                "RC"
            end
          end

          def unspecified?
            value == "Unspecified"
          end

          def public?
            value == "Public"
          end

          def beta?
            value == "Beta"
          end

          def internal?
            value == "Internal"
          end

          def developer?
            value = "Dev"
          end

          def rc?
            value == "RC"
          end
        }
      end

      rule steam_id_part
        [01] {
          def value
            text_value.to_i
          end
        }
      end

      rule steam_account_number
        integer
      end
    end
  end
end
